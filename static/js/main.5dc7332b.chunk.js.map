{"version":3,"sources":["components/Navbar/Friends/Friends.module.css","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Users/User/User.module.css","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","api/api.js","redux/users-reducer.js","components/common/preloader/Preloader.jsx","components/Users/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/auth-reducer.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsContros.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Navbar/Friends/FriendItem/FriendItem.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","News","props","Music","Settings","initialState","dialogs","id","name","profileImg","messages","message","isResponse","dialogsReducer","state","action","type","text","newMessage","DialogItem","path","className","s","dialog","activeClassName","active","to","src","alt","Message","messageContainer","Element","input","meta","hasError","touched","error","styles","formControl","Input","Textarea","required","value","maxLengthCreator","length","maxLength20","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","addMessageActionCreator","Navbar","nav","navInner","item","activeLink","NavbarContainer","friends","sidebar","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","pageNum","pageSize","get","response","data","unfollowUser","userId","delete","followUser","post","profileAPI","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","currentPage","isFetching","followingInProgress","followUnfollowFlow","apiMethod","a","toggleFollowingProgress","resultCode","toggleFollow","setUsers","getTotalUsers","totalCount","count","toggleIsFetching","usersReducer","u","followed","filter","Preloader","preloader","Paginator","Math","ceil","pages","i","push","p","selectedPage","onClick","onPageChanged","User","user","follow","photos","unfollow","userContainer","avatarContainer","avatar","small","followButton","disabled","some","el","infoContainer","personContainer","location","Users","createSelector","usersPage","getCurrentPage","getIsFetching","getFollowingInProgress","getPageSize","getTotalUsersCount","UsersContainer","setCurrentPage","items","bind","ProfileStatusWithHooks","useState","setStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","fullName","lookingForAJob","posts","likesCount","profileReducer","newPost","postText","postId","Post","maxLength15","AddPostFormRedux","MyPosts","postsElements","profilePage","postsBlock","addPost","memo","MyPostsContainer","addPostActionCreator","Profile","login","setUserData","payload","getAuthUserData","logout","authReducer","ProfileContainer","match","params","authUserId","history","getStatus","getProfile","withRouter","Header","header","loginBlock","HeaderContainer","LoginReduxForm","formError","stopSubmit","_error","href","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","sidebarReducer","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.5dc7332b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsContainer\":\"Friends_friendsContainer__3bYKq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.4ceb795a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UvhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2ahGY\",\"navInner\":\"Navbar_navInner__1hBW4\",\"item\":\"Navbar_item__2GBmG\",\"activeLink\":\"Navbar_activeLink__19xvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Wv45_\",\"dialogsItems\":\"Dialogs_dialogsItems__30hFb\",\"active\":\"Dialogs_active__342r0\",\"messages\":\"Dialogs_messages__2IU6F\",\"message\":\"Dialogs_message__82h6e\",\"profileImg\":\"Dialogs_profileImg__2ET4c\",\"dialog\":\"Dialogs_dialog__Z8e_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"User_userContainer__2swfE\",\"avatar\":\"User_avatar__2ogUE\",\"infoContainer\":\"User_infoContainer__394PM\",\"personContainer\":\"User_personContainer__1cqcU\",\"status\":\"User_status__2_2UP\",\"location\":\"User_location__rQWc7\",\"followButton\":\"User_followButton__3p2T7\"};","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        {id: 2, name: \"Andrey\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        {id: 3, name: \"Sveta\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        {id: 4, name: \"Sasha\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        {id: 5, name: \"Victor\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        {id: 6, name: \"Valery\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hi\", isResponse: true},\r\n        {id: 2, message: \"How is your it-kamasutra?\", isResponse: false},\r\n        {id: 3, message: \"Yo\", isResponse: false},\r\n        {id: 4, message: \"What's up?\", isResponse: true},\r\n        {id: 5, message: \"Miss u\", isResponse: true},\r\n    ],\r\n\r\n}\r\n\r\nlet dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let text = action.message;\r\n            let newMessage = {id: 6, message: text, isResponse: true};\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport let addMessageActionCreator = (message) => ({type: ADD_MESSAGE, message});\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n                <NavLink activeClassName={s.active} to={path}>\r\n                    <img className={s.profileImg} src={props.profileImg} alt=\"\"/>\r\n                    <div>{props.name}</div>\r\n                </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nlet Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.messageContainer}>\r\n            <div className={s.dialog}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormsContros.module.css\"\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     let hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n//             <div>\r\n//                 <textarea {...input} {...props}/>\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//\r\n//     )\r\n// }\r\n//\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     let hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n//             <div>\r\n//                 <input {...input} {...props}/>\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//\r\n//     )\r\n// }\r\n\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n            <div>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const Input = Element('input');\r\nexport const Textarea = Element('textarea');","export let required = (value) => {\r\n    if (value) return undefined;\r\n    return 'This is required field'\r\n}\r\n\r\nexport let maxLengthCreator = (length) => (value) => {\r\n    if (value.length > length) {\r\n        return `Max length is ${length} symbols`\r\n    }\r\n    return undefined;\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxLength20 = maxLengthCreator(20);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}\r\n                                                                         profileImg={d.profileImg}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message id={m.id} message={m.message}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    // if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                        <Field component={Textarea} name=\"newMessageBody\" placeholder={\"Enter your message\"} validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login'/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n        let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <nav className={s.navInner}>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/profile\">Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/dialogs\">Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/news\">News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/music\">Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/settings\">Settings</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.activeLink} to=\"/users\">Find users</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            {/*<Friends friends={props.friends}/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\n\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\n\r\n\r\nexport default NavbarContainer;","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"9e2cf503-0726-4c63-bc52-bce6b48addf7\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    async getUsers(pageNum = 1, pageSize = 5) {\r\n        let response = await instance.get(`users?page=${pageNum}&count=${pageSize}`);\r\n        return response.data\r\n    },\r\n\r\n    async unfollowUser(userId) {\r\n        let response = await instance.delete('follow/' + userId);\r\n        return response.data\r\n    },\r\n\r\n    async followUser(userId) {\r\n        let response = await instance.post('follow/' + userId);\r\n        return response.data\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    async getProfile(userId) {\r\n        let response = await instance.get(`profile/` + userId)\r\n        return response.data\r\n    },\r\n\r\n    async getStatus(userId) {\r\n        let response = await instance.get(`profile/status/` + userId)\r\n        return response.data\r\n    },\r\n\r\n    async updateStatus(status) {\r\n        let response = await instance.put(`profile/status`, {status: status})\r\n        return response.data\r\n    },\r\n}\r\n\r\n    export const authAPI = {\r\n        async me() {\r\n            let response = await instance.get(`auth/me`)\r\n            return response.data\r\n        },\r\n\r\n        async login(email, password, rememberMe = false) {\r\n            let response = await instance.post('auth/login', {email, password, rememberMe})\r\n            return response.data\r\n        },\r\n\r\n        async logout() {\r\n            let response = await instance.delete('auth/login')\r\n            return response.data\r\n        }\r\n    }\r\n\r\n\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst TOGGLE_FOLLOW = 'TOGGLE-FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst GET_TOTAL_USERS = 'GET_TOTAL_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [\r\n    ],\r\n    totalUsersCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.pageNum}\r\n\r\n        case GET_TOTAL_USERS:\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return action.isFetching ?\r\n                {...state, followingInProgress: [...state.followingInProgress, action.userId]} :\r\n                {...state, followingInProgress: state.followingInProgress.filter(id => id != action.userId)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let requestUsers = (pageNum, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(pageNum, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(getTotalUsers(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod) => {\r\n    dispatch(toggleFollowingProgress(userId, true));\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode == 0) {\r\n        dispatch(toggleFollow(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(userId, false))\r\n}\r\n\r\nexport let follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI))\r\n}\r\n\r\nexport let unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport let toggleFollow = (userId) => ({type: TOGGLE_FOLLOW, userId});\r\nexport let setUsers = (users) => ({type: SET_USERS, users});\r\nexport let getTotalUsers = (totalCount) => ({type: GET_TOTAL_USERS, count: totalCount});\r\nexport let setCurrentPage = (pageNum) => ({type: SET_CURRENT_PAGE, pageNum});\r\nexport let toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport let toggleFollowingProgress = (userId, isFetching) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, userId, isFetching})\r\n\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nlet defaultImageUrl = 'https://bit.ly/3jdsp2D';\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= 6; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && s.selectedPage}\r\n                             onClick={() => props.onPageChanged(p)}>{p}</span>\r\n            })\r\n            }\r\n        </div>)\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './User.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nlet defaultImageUrl = 'https://bit.ly/3jdsp2D';\r\n\r\n\r\nlet User = ({user, toggleFollow, id, followingInProgress, photos, follow, unfollow }) => {\r\n    let onToggleFollow = () => {\r\n        toggleFollow(id);\r\n    }\r\n\r\n    return (\r\n        <div className={s.userContainer}>\r\n            <div className={s.avatarContainer}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <div>\r\n                        <img className={s.avatar} src={user.photos.small || defaultImageUrl} alt=\"\"/>\r\n                    </div>\r\n                </NavLink>\r\n                <div>\r\n                    <button className={s.followButton} disabled={followingInProgress.some(el => el == user.id)} onClick={\r\n                        user.followed ? () => unfollow(user.id) : () => follow(user.id)\r\n                    }>{user.followed ? 'Unfollow' : 'Follow'}</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                <div className={s.personContainer}>\r\n                    <div>{user.name}</div>\r\n                    <div className={s.status}>{user.status}</div>\r\n                </div>\r\n                <div className={s.location}>{user.location}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, followingInProgress, follow, unfollow, ...props}) => {\r\n\r\n    return (\r\n        <>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            <div className={s.users}>\r\n\r\n                <h2>Users</h2>\r\n\r\n                <Paginator currentPage={currentPage} totalUsersCount={totalUsersCount} pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n\r\n                {\r\n                    props.users.map(u => <User user={u} followingInProgress={followingInProgress} follow={follow} unfollow={unfollow}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector((getUsersSelector), (users) => {\r\n    return users.filter( u => true )\r\n})\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getTotalUsers, requestUsers,\r\n    setCurrentPage,\r\n    setUsers,\r\n    toggleIsFetching, unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (selectedPage) => {\r\n        this.props.setCurrentPage(selectedPage);\r\n        this.props.getUsers(selectedPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   isFetching={this.props.isFetching}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        currentPage: getCurrentPage(state),\r\n        users: getUsers(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUsers,\r\n            getTotalUsers,\r\n            setCurrentPage,\r\n            toggleIsFetching,\r\n            getUsers: requestUsers,\r\n            follow,\r\n            unfollow\r\n        }\r\n    ),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // state = {\r\n    //     editMode: false,\r\n    //     status: this.props.status\r\n    // }\r\n    //\r\n    // activateEditMode = () => {\r\n    //     this.setState({editMode: true})\r\n    //\r\n    // }\r\n    //\r\n    // deactivateEditMode = () => {\r\n    //     this.setState({editMode: false});\r\n    //     this.props.updateStatus(this.state.status)\r\n    // }\r\n    //\r\n    // onStatusChange = (e) => {\r\n    //     // let status = e.currentTarget.value;\r\n    //     this.setState({\r\n    //         status: e.currentTarget.value\r\n    //     });\r\n    // }\r\n    //\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({status: this.props.status})\r\n    //     }\r\n    // }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n       return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n                </div>}\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>}\r\n\r\n            </div>\r\n       )\r\n\r\n   }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nlet ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.profileImg} src={'https://bit.ly/3gQc42c'} alt=\"\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>Меня зовут {profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <img src={profile.photos.small || 'https://bit.ly/3jdsp2D'} alt=\"\"/>\r\n                <div>\r\n                    Ищу работу: {profile.lookingForAJob ? <img src={'https://bit.ly/2EWCfqK'}/> : <img src={'https://bit.ly/3gSAR5V'}/> }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n        {id: 1, message: \"Coldplay\", likesCount: 15},\r\n        {id: 2, message: \"Hotel California\", likesCount: 12}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {id: 3, message: action.postText, likesCount: 0};\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter( p => p.id != action.postId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addPostActionCreator = (postText) => ({type: ADD_POST, postText});\r\nexport let deletePostActionCreator = (postId) => ({type: DELETE_POST, postId});\r\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport let setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n\r\nexport let getProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n        dispatch(setUserProfile(data));\r\n}\r\n\r\nexport let getStatus = (userId) => async (dispatch) => {\r\n    let status = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\nexport let updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={s.item}>\r\n        <img src=\"https://pyxis.nymag.com/v1/imgs/630/6e0/eb215ad90cd826b9e57ff505f54c5c7228-07-avatar.rsquare.w700.jpg\" alt=\"\" />\r\n          {props.message}\r\n          <div>\r\n            <span>{props.likesCount} likes</span>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength15 = maxLengthCreator(15);\r\n\r\nlet AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Write your message\"} component={Textarea} name={\"postText\"} validate={[required, maxLength15]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddPostFormRedux = reduxForm({form: \"postsAddMessageForm\"})(AddPostForm);\r\n\r\nlet MyPosts = (props) => {\r\n\r\n    let postsElements = props.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <AddPostFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMyPosts = React.memo(MyPosts)\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    // if (!props.isAuth) return <Redirect to='/login'/>\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport let setUserData = (userId, login, email, isAuth) => ({type: SET_USER_DATA, payload: {userId, login, email, isAuth}});\r\n\r\n\r\n\r\nexport let getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.me();\r\n\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data;\r\n                dispatch(setUserData(id, login, email, true));\r\n            }\r\n}\r\n\r\nexport let login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe);\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n               let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n}\r\n\r\nexport let logout = () => async (dispatch) => {\r\n\r\n    let data = await authAPI.logout()\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getStatus(userId);\r\n        this.props.getProfile(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        authUserId: state.auth.userId,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getAuthUserData,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n    )(ProfileContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://bit.ly/3hSJYVx\" alt=\"\"/>\r\n        {props.isAuth ? <div className={s.loginBlock}>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n            <div>\r\n            <NavLink to={'/login'}>\r\n            <div className={s.loginBlock}>Login</div>\r\n        </NavLink>\r\n            </div>}\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout, setUserData} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {setUserData, logout})\r\n)(HeaderContainer);","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../common/FormsControls/FormsContros.module.css\"\r\n\r\nlet maxLength20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Login'} name={'email'} component={Input} validate={[required, maxLength20]}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder={'Password'} name={'password'} component={Input} validate={[required, maxLength20]} type={'password'}/>\r\n        </div>\r\n        <div>\r\n            <Field type={'checkbox'} name={'rememberMe'} component={Input}/> remember me\r\n        </div>\r\n        {\r\n            props.error &&\r\n            <div className={styles.formError}>\r\n                {props.error}\r\n            </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst LoginReduxForm = compose(\r\n    reduxForm({form: 'login'})\r\n)(LoginForm)\r\n\r\nlet Login = (props) => {\r\n\r\n    let onSubmit = ({email, password, rememberMe}) => {\r\n        props.login(email, password, rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div>\r\n        <h1><a href='https://social-network.samuraijs.com/login'>Login</a></h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {INITIALIZE} from \"redux-form/lib/actionTypes\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport let initializeSuccess = () => ({type: INITIALIZE_SUCCESS});\r\n\r\n\r\nexport let initializeApp = () => async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(initializeSuccess());\r\n}\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData} from \"./redux/auth-reducer\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) return <Preloader />\n\n        return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","let initialState = {\r\n\r\n        friends: [\r\n            {id: 1, name: \"Dimych\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n            {id: 2, name: \"Andrey\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n            {id: 3, name: \"Sveta\", profileImg: 'https://bit.ly/3fX9bw5'},\r\n        ]\r\n\r\n};\r\n\r\nlet sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './redux/redux-store'\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree(store.getState());\n\nstore.subscribe( () => {\n    let state = store.getState();\n    rerenderEntireTree(state);\n});\n\nexport default rerenderEntireTree;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsContros_formControl__1DuMj\",\"error\":\"FormsContros_error__13Kz7\",\"formError\":\"FormsContros_formError__1QHNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__QvfTg\",\"userContainer\":\"Users_userContainer__2YbmU\",\"avatarContainer\":\"Users_avatarContainer__1jpSd\",\"avatar\":\"Users_avatar__110jU\",\"infoContainer\":\"Users_infoContainer__7Ccx0\",\"personContainer\":\"Users_personContainer__1RnSA\",\"status\":\"Users_status__KlQKd\",\"location\":\"Users_location__1qnJQ\",\"followButton\":\"Users_followButton__2fv3N\",\"selectedPage\":\"Users_selectedPage__QIbKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__vk4hf\",\"loginBlock\":\"Header_loginBlock__1H1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"FriendItem_friendContainer__2_dvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__PkMpi\",\"posts\":\"ProfileInfo_posts__hQ9A7\",\"profileImg\":\"ProfileInfo_profileImg__2AI6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2pFwW\"};"],"sourceRoot":""}